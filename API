from flask import Flask, request, send_file
from PIL import Image, ImageDraw, ImageFont
import io

app = Flask(__name__)

# Function to generate an image from text
def text_to_image(text, font_size=40, image_size=(400, 200), background_color=(255, 255, 255), text_color=(0, 0, 0)):
    # Create a blank image with the specified background color
    img = Image.new('RGB', image_size, color=background_color)
    
    # Initialize ImageDraw object
    draw = ImageDraw.Draw(img)
    
    # Load a font
    try:
        font = ImageFont.truetype("arial.ttf", font_size)
    except IOError:
        font = ImageFont.load_default()
    
    # Calculate the size of the text to center it
    text_width, text_height = draw.textsize(text, font=font)
    position = ((image_size[0] - text_width) // 2, (image_size[1] - text_height) // 2)
    
    # Add text to image
    draw.text(position, text, font=font, fill=text_color)
    
    # Save the image to a BytesIO object to serve over HTTP
    img_bytes = io.BytesIO()
    img.save(img_bytes, format='PNG')
    img_bytes.seek(0)
    
    return img_bytes

# API route to generate image from text
@app.route('/generate-image', methods=['POST'])
def generate_image():
    data = request.get_json()
    
    if 'text' not in data:
        return {"error": "Text not provided"}, 400
    
    text = data['text']
    
    # Call the text_to_image function
    img_bytes = text_to_image(text)
    
    # Send the image as a response
    return send_file(img_bytes, mimetype='image/png')

# Run the Flask app
if __name__ == '__main__':
    app.run(debug=True)
